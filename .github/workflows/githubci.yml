name: Arduino Library CI

on: [pull_request, push, repository_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["feather_m4_express_tinyusb", "feather_rp2040_tinyusb"]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: fix SDFat
      run: git clone --quiet https://github.com/adafruit/SdFat.git /home/runner/Arduino/libraries/SdFat

    - name: test platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}

    - name: Move build artifacts into place
      run: |
            mkdir build
            find -name "*.uf2" -ls
            for i in examples/*/build/*/*.uf2; do j=${i##*/}; j=${j%%*.}; mv $i build/$j-${{ matrix.arduino-platform }}.uf2; done

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.arduino-platform }}
        path: |
            build/*.uf2

    - name: Zip release files
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        if [ -d build ]; then
            (
            echo "Built from Adafruit Floppy `git describe --tags` for ${{ matrix.arduino-platform }}"
            echo "Source code: https://github.com/adafruit/Adafruit_Floppy"
            echo "Adafruit Learning System: https://learn.adafruit.com/"
            ) > build/README.txt
            cd build && zip -9 -o ${{ matrix.arduino-platform }}.zip *.hex *.bin *.uf2 *.txt
        fi

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/${{ matrix.arduino-platform }}.zip
        fail_on_unmatched_files: false
        body: "Select the zip file corresponding to your board from the list below."

  doxyclang:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: fix SDFat
      run: git clone --quiet https://github.com/adafruit/SdFat.git /home/runner/Arduino/libraries/SdFat

    - name: clang
      run: python3 ci/run-clang-format.py -e "ci/*" -e "bin/*" -r . 

    - name: doxygen
      env:
        GH_REPO_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
        PRETTYNAME : "Adafruit Floppy Interface Library"
      run: bash ci/doxy_gen_and_deploy.sh
